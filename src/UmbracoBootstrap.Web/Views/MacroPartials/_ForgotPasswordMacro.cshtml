@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using UmbracoBootstrap.Web.Models;
@using UmbracoBootstrap.Web.Controllers;
@using UmbracoBootstrap.Web.Helpers;
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    var dataHelper = new MemberTempDataHelper(TempData);

    if (Umbraco.HasQueryString("key") && Umbraco.HasQueryString("email"))
    {
        Html.RenderAction("ResetPassword", "Member", new
        {
            email = Umbraco.GetQueryString("email", ""),
            key = Umbraco.GetQueryString("key", ""),
        });
    }
    else
    {
        if (dataHelper.PasswordChanged)
        {
            <div class="alert alert-success">
                @Umbraco.GetDictionaryValue("PasswordChanged", "PasswordChanged")
            </div>
        }
        if(dataHelper.ForgotPasswordMailSent)
        {
            <div class="alert alert-success">
               @Umbraco.GetDictionaryValue("ForgotPasswordMailSent", "ForgotPasswordMailSent")
            </div>
        }
        if(dataHelper.EmailNotFound)
        {
            <div class="alert alert-danger">
                @Umbraco.GetDictionaryValue("EmailNotFound", "EmailNotFound")
            </div>
        }
        var forgotPasswordModel = new ForgotPasswordModel();
        using (Html.BeginUmbracoForm<MemberController>("HandleForgotPassword", FormMethod.Post))
        {
            <div class="form-group">
                @Html.LabelFor(m => forgotPasswordModel.Email)
                @Html.TextBoxFor(m => forgotPasswordModel.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m=> forgotPasswordModel.Email)
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-warning">@Umbraco.GetDictionaryValue("EmailForgotPasswordInstructions")</button>
            </div>
        }
    }
}